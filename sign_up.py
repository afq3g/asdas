# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'ZnJvbSBsaWIydG8zLnBnZW4yIGltcG9ydCB0b2tlbgpmcm9tIG9wZXJhdG9yIGltcG9ydCB0cnVlZGl2CmltcG9ydCByZQppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IG9zLHRocmVhZGluZwpmcm9tIHdlYmRyaXZlcl9tYW5hZ2VyLmNocm9tZSBpbXBvcnQgQ2hyb21lRHJpdmVyTWFuYWdlcixDaHJvbWVUeXBlCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNocm9tZS5zZXJ2aWNlIGltcG9ydCBTZXJ2aWNlCmltcG9ydCByYW5kb20KaW1wb3J0IHN0cmluZwppbXBvcnQgc3BlZWNoX3JlY29nbml0aW9uIGFzIHNyCmZyb20gcHlkdWIgaW1wb3J0IEF1ZGlvU2VnbWVudApmcm9tIHNlbGVuaXVtIGltcG9ydCB3ZWJkcml2ZXIKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LnVpIGltcG9ydCBTZWxlY3QKZnJvbSBzZWxlbml1bS5jb21tb24uZXhjZXB0aW9ucyBpbXBvcnQgTm9TdWNoRWxlbWVudEV4Y2VwdGlvbgpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb0FsZXJ0UHJlc2VudEV4Y2VwdGlvbgpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0IGltcG9ydCBleHBlY3RlZF9jb25kaXRpb25zIGFzIEVDCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNvbW1vbi5hY3Rpb25fY2hhaW5zIGltcG9ydCBBY3Rpb25DaGFpbnMKaW1wb3J0IHVuZGV0ZWN0ZWRfY2hyb21lZHJpdmVyIGFzIHVjCmltcG9ydCB1bml0dGVzdAppbXBvcnQgdGltZQppbXBvcnQgcmVxdWVzdHMKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC51aSBpbXBvcnQgV2ViRHJpdmVyV2FpdAppbXBvcnQgZW1haWwgYXMgRW1haWwKZnJvbSBpbWFwX3Rvb2xzIGltcG9ydCBNYWlsQm94LCBBCmZyb20gdXJsZXh0cmFjdCBpbXBvcnQgVVJMRXh0cmFjdApmcm9tIG1pbWVzaXMgaW1wb3J0IFBlcnNvbgpmcm9tIG1pbWVzaXMubG9jYWxlcyBpbXBvcnQgTG9jYWxlCmZyb20gaWJtX3dhdHNvbiBpbXBvcnQgU3BlZWNoVG9UZXh0VjEKZnJvbSBpYm1fd2F0c29uLndlYnNvY2tldCBpbXBvcnQgUmVjb2duaXplQ2FsbGJhY2ssIEF1ZGlvU291cmNlCmZyb20gaWJtX2Nsb3VkX3Nka19jb3JlLmF1dGhlbnRpY2F0b3JzIGltcG9ydCBJQU1BdXRoZW50aWNhdG9yCmZyb20gdHdvY2FwdGNoYSBpbXBvcnQgVHdvQ2FwdGNoYQppbXBvcnQgY2xhaW0KYXBpID0gIjMwYzZmODAwNTM5MzNiYzIwMjI5MjNjNTQ4MjIxMjFjIgp1cmkgPSAiaHR0cHM6Ly9vZHlzZWUuY29tLyQvdmVyaWZ5IgpzaXRla2V5ID0gIjZMZVBzSmdVQUFBQUFGVHVXT0tSTG55b05LaG0wSEE0QzNlbHJGTUciCnNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkKY2hyb21lX3NlcnZpY2UgPSBTZXJ2aWNlKENocm9tZURyaXZlck1hbmFnZXIoY2hyb21lX3R5cGU9Q2hyb21lVHlwZS5HT09HTEUpLmluc3RhbGwoKSkKc3JjID0gImF1ZGlvLm1wMyIKZHN0ID0gInRlc3Qud2F2IgpjaHJvbWVfb3B0aW9ucyA9IHVjLkNocm9tZU9wdGlvbnMoKQpjaHJvbWVfb3B0aW9ucy5oZWFkbGVzcyA9IFRydWUKcHJlZnMgPSB7InByb2ZpbGUubWFuYWdlZF9kZWZhdWx0X2NvbnRlbnRfc2V0dGluZ3MuaW1hZ2VzIjogMn0KY2hyb21lX29wdGlvbnMuYWRkX2V4cGVyaW1lbnRhbF9vcHRpb24oInByZWZzIiwgcHJlZnMpCmRyaXZlciA9IHVjLkNocm9tZSh2ZXJzaW9uX21haW49IjEwNCIsb3B0aW9ucz1jaHJvbWVfb3B0aW9ucykKZHJpdmVyLmltcGxpY2l0bHlfd2FpdCgzMCkKYmFzZV91cmwgPSAiaHR0cHM6Ly93d3cucXVvcmEuY29tLyIKdmVyaWZpY2F0aW9uRXJyb3JzID0gW10KYWNjZXB0X25leHRfYWxlcnQgPSBUcnVlCmlibSA9IHsKICAgICJhcGlrZXkiOiAiakdud3pzbFhueWhra1NQRlcyMXNLeVg5SlI4NkVENGVjZ0NSWDNzUldaT2wiLAogICAgImlhbV9hcGlrZXlfZGVzY3JpcHRpb24iOiAiQXV0by1nZW5lcmF0ZWQgZm9yIGtleSBjcm46djE6Ymx1ZW1peDpwdWJsaWM6c3BlZWNoLXRvLXRleHQ6dXMtZWFzdDphLzU4M2NiZTg0ZjM0ZTRiOTM5M2M5YTE3N2IwNTE1ZDBiOjM1NGM5NmI1LTE3NjgtNDQ4My1hNjY3LWZmYWYzMGQ3NGQyYjpyZXNvdXJjZS1rZXk6NGUzM2YxYTgtYzM5YS00MDg3LTlkNjYtNjk5MTg0Yjk0ZDk5IiwKICAgICJpYW1fYXBpa2V5X25hbWUiOiAiU2VydmljZSBjcmVkZW50aWFscy0xIiwKICAgICJpYW1fcm9sZV9jcm4iOiAiY3JuOnYxOmJsdWVtaXg6cHVibGljOmlhbTo6OjpzZXJ2aWNlUm9sZTpNYW5hZ2VyIiwKICAgICJpYW1fc2VydmljZWlkX2NybiI6ICJjcm46djE6Ymx1ZW1peDpwdWJsaWM6aWFtLWlkZW50aXR5OjphLzU4M2NiZTg0ZjM0ZTRiOTM5M2M5YTE3N2IwNTE1ZDBiOjpzZXJ2aWNlaWQ6U2VydmljZUlkLTNmMTdmMjM5LWNmMDgtNDY4YS1hMDdhLThlN2Q2YWZkMWE0MSIsCiAgICAidXJsIjogImh0dHBzOi8vYXBpLnVzLWVhc3Quc3BlZWNoLXRvLXRleHQud2F0c29uLmNsb3VkLmlibS5jb20vaW5zdGFuY2VzLzM1NGM5NmI1LTE3NjgtNDQ4My1hNjY3LWZmYWYzMGQ3NGQyYiIKfQphcGlrZXkgPSBpYm1bJ2FwaWtleSddCnVybCA9IGlibVsndXJsJ10KZGVsYXlUaW1lID0gMgphdWRpb1RvVGV4dERlbGF5ID0gMTAKZmlsZW5hbWUgPSAnYXVkaW8ubXAzJwpkcml2ZXIuZ2V0KCdodHRwczovL2dvb2dsZS5jb20nKQoKCmRlZiBhdWRpb190b190ZXh0KCk6CiAgICBBVURJT19GSUxFID0idGVzdC53YXYiCiMgQVVESU9fRklMRSA9IHBhdGguam9pbihwYXRoLmRpcm5hbWUocGF0aC5yZWFscGF0aChfX2ZpbGVfXykpLCAiZnJlbmNoLmFpZmYiKQojIEFVRElPX0ZJTEUgPSBwYXRoLmpvaW4ocGF0aC5kaXJuYW1lKHBhdGgucmVhbHBhdGgoX19maWxlX18pKSwgImNoaW5lc2UuZmxhYyIpCgojIHVzZSB0aGUgYXVkaW8gZmlsZSBhcyB0aGUgYXVkaW8gc291cmNlCiAgICByID0gc3IuUmVjb2duaXplcigpCiAgICB3aXRoIHNyLkF1ZGlvRmlsZShBVURJT19GSUxFKSBhcyBzb3VyY2U6CiAgICAgICAgYXVkaW8gPSByLnJlY29yZChzb3VyY2UpICAjIHJlYWQgdGhlIGVudGlyZSBhdWRpbyBmaWxlCgoKCiAgICAjIHJlY29nbml6ZSBzcGVlY2ggdXNpbmcgR29vZ2xlIFNwZWVjaCBSZWNvZ25pdGlvbgogICAgdHJ5OgogICAgICAgICMgZm9yIHRlc3RpbmcgcHVycG9zZXMsIHdlJ3JlIGp1c3QgdXNpbmcgdGhlIGRlZmF1bHQgQVBJIGtleQogICAgICAgICMgdG8gdXNlIGFub3RoZXIgQVBJIGtleSwgdXNlIGByLnJlY29nbml6ZV9nb29nbGUoYXVkaW8sIGtleT0iR09PR0xFX1NQRUVDSF9SRUNPR05JVElPTl9BUElfS0VZIilgCiAgICAgICAgIyBpbnN0ZWFkIG9mIGByLnJlY29nbml6ZV9nb29nbGUoYXVkaW8pYAogICAgICAgIHByaW50KCJHb29nbGUgU3BlZWNoIFJlY29nbml0aW9uIHRoaW5rcyB5b3Ugc2FpZCAiICsgci5yZWNvZ25pemVfZ29vZ2xlKGF1ZGlvKSkKICAgICAgICByZXR1cm4gci5yZWNvZ25pemVfZ29vZ2xlKGF1ZGlvKQogICAgZXhjZXB0IHNyLlVua25vd25WYWx1ZUVycm9yOgogICAgICAgIHByaW50KCJHb29nbGUgU3BlZWNoIFJlY29nbml0aW9uIGNvdWxkIG5vdCB1bmRlcnN0YW5kIGF1ZGlvIikKICAgIGV4Y2VwdCBzci5SZXF1ZXN0RXJyb3IgYXMgZToKICAgICAgICBwcmludCgiQ291bGQgbm90IHJlcXVlc3QgcmVzdWx0cyBmcm9tIEdvb2dsZSBTcGVlY2ggUmVjb2duaXRpb24gc2VydmljZTsgezB9Ii5mb3JtYXQoZSkpCgoKCgoKCmRlZiBjYXB0Y2hhKHVyaSwgc2l0ZWtleSwgYXBpKToKICAgIHNvbHZlciA9IFR3b0NhcHRjaGEoYXBpKQogICAgcmVzdWx0ID0gc29sdmVyLnNvbHZlX2NhcHRjaGEoc2l0ZV9rZXk9c2l0ZWtleSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2VfdXJsPXVyaSkKICAgIHJldHVybiByZXN1bHQKCgpFTUFJTCA9ICd2ZXJpZmljYXRpb25AYWRhbWFsaXNyYS5jb20nClBBU1NXT1JEID0gJ1AxY2tsM19SMWNrJwpTRVJWRVIgPSAnbWFpbC5hZGFtYWxpc3JhLmNvbScKZXh0cmFjdG9yID0gVVJMRXh0cmFjdCgpCgpwcm94eSA9IFsiaHR0cDovLzg1LjE0LjI0My4zMTozMTI4IiwgImh0dHA6Ly8xOTMuMTIyLjcxLjE4NDozMTI4IiwgImh0dHA6Ly8yMC4yNC45MS4xMDA6ODAwMCIsICJodHRwOi8vMjAuMTExLjQ2LjE4OjgwMDAiLCAiaHR0cDovLzE1Ny4xMDAuMTIuMTM4Ojk5OSIsICJodHRwOi8vMTEzLjE5Ni44NS43NDozMTI4IiwgImh0dHA6Ly8xODIuMjUzLjEwOS4xODI6ODA4MCIsICJodHRwOi8vOC4yMTkuOTcuMjQ4OjgwIiwgImh0dHA'
love = '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'
god = '0pCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVybHNbMF0KCiAgICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6ZXhpdCgpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZSkKICAgICAgICAKICAgICAgICBwYXNzCgoKZGVmIGF1dGhfdG9rZW4oKToKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgJ2F1dGhvcml0eSc6ICdhcGkub2R5c2VlLmNvbScsCiAgICAgICAgJ2FjY2VwdCc6ICcqLyonLAogICAgICAgICdhY2NlcHQtbGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjknLAogICAgICAgICdkbnQnOiAnMScsCiAgICAgICAgJ29yaWdpbic6ICdodHRwczovL29keXNlZS5jb20nLAogICAgICAgICdyZWZlcmVyJzogJ2h0dHBzOi8vb2R5c2VlLmNvbS8nLAogICAgICAgICdzZWMtY2gtdWEnOiAnIkNocm9taXVtIjt2PSIxMDQiLCAiIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMDQiJywKICAgICAgICAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MCcsCiAgICAgICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciTGludXgiJywKICAgICAgICAnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLAogICAgICAgICdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywKICAgICAgICAnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1zaXRlJywKICAgICAgICAndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoWDExOyBMaW51eCB4ODZfNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDQuMC4wLjAgU2FmYXJpLzUzNy4zNicsCiAgICB9CgogICAgZGF0YSA9IHsKICAgICAgICAnYXV0aF90b2tlbic6ICcnLAogICAgICAgICdsYW5ndWFnZSc6ICdlbicsCiAgICAgICAgJ2FwcF9pZCc6ICdvZHlzZWVjb202OTJFQVdodG9xRHVBZlE2S0hNWHhGeHQ4dGtobXQ3c2ZwckVNSFdLank1aGY2UHdaY0hEVjU0MlYnLAogICAgfQogICAgdHJ5OgogICAgICAgIHIgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovL2FwaS5vZHlzZWUuY29tL3VzZXIvbmV3JywKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEpCiAgICAgICAgZGF0ID0gci5qc29uKCkKICAgICAgICB0b2tlbjEgPSBkYXRbJ2RhdGEnXQogICAgICAgIHRva2VuID0gdG9rZW4xWydhdXRoX3Rva2VuJ10KCiAgICAgICAgcmV0dXJuIHRva2VuCiAgICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6ZXhpdCgpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZSkKICAgICAgICAKICAgICAgICBwYXNzCgoKZGVmIGxvZ2luX3Rva2VuKGF1dGhfdCwgZW1haWwpOgogICAgaGVhZGVycyA9IHsKICAgICAgICAnYXV0aG9yaXR5JzogJ2FwaS5vZHlzZWUuY29tJywKICAgICAgICAnYWNjZXB0JzogJyovKicsCiAgICAgICAgJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOScsCiAgICAgICAgJ2RudCc6ICcxJywKICAgICAgICAnb3JpZ2luJzogJ2h0dHBzOi8vb2R5c2VlLmNvbScsCiAgICAgICAgJ3JlZmVyZXInOiAnaHR0cHM6Ly9vZHlzZWUuY29tLycsCiAgICAgICAgJ3NlYy1jaC11YSc6ICciQ2hyb21pdW0iO3Y9IjEwNCIsICIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEwNCInLAogICAgICAgICdzZWMtY2gtdWEtbW9iaWxlJzogJz8wJywKICAgICAgICAnc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJMaW51eCInLAogICAgICAgICdzZWMtZmV0Y2gtZGVzdCc6ICdlbXB0eScsCiAgICAgICAgJ3NlYy1mZXRjaC1tb2RlJzogJ2NvcnMnLAogICAgICAgICdzZWMtZmV0Y2gtc2l0ZSc6ICdzYW1lLXNpdGUnLAogICAgICAgICd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEwNC4wLjAuMCBTYWZhcmkvNTM3LjM2JywKICAgIH0KCiAgICBjb29raWVzID0gewoKICAgICAgICAnYXV0aF90b2tlbic6IGF1dGhfdAoKICAgIH0KICAgIGRhdGEgPSB7CiAgICAgICAgJ2F1dGhfdG9rZW4nOiBhdXRoX3QsCiAgICAgICAgJ2VtYWlsJzogZW1haWwsCiAgICAgICAgJ3Bhc3N3b3JkJzogJ1AxY2tsM19SMWNrJywKICAgIH0KCiAgICByZXNwb25zZSA9IHNlc3Npb24ucG9zdCgnaHR0cHM6Ly9hcGkub2R5c2VlLmNvbS91c2VyL3NpZ25pbicsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb29raWVzPWNvb2tpZXMsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1kYXRhKQogICAgcHJpbnQocmVzcG9uc2UuY29udGVudCwgJ2xvZ2luIHN0YXR1cycpCgoKZGVmIHNpZ25fdXAodG9rZW4sIGVtYWlsKToKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgJ2F1dGhvcml0eSc6ICdhcGkub2R5c2VlLmNvbScsCiAgICAgICAgJ2FjY2VwdCc6ICcqLyonLAogICAgICAgICdhY2NlcHQtbGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjksYXI7cT0wLjgnLAogICAgICAgICdkbnQnOiAnMScsCiAgICAgICAgJ29yaWdpbic6ICdodHRwczovL29keXNlZS5jb20nLAogICAgICAgICdyZWZlcmVyJzogJ2h0dHBzOi8vb2R5c2VlLmNvbS8nLAogICAgICAgICdzZWMtY2gtdWEnOiAnIkNocm9taXVtIjt2PSIxMDQiLCAiIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMDQiJywKICAgICAgICAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MCcsCiAgICAgICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciTGludXgiJywKICAgICAgICAnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLAogICAgICAgICdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywKICAgICAgICAnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1zaXRlJywKICAgICAgICAndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoWDExOyBMaW51eCB4ODZfNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDQuMC4wLjAgU2FmYXJpLzUzNy4zNicsCiAgICB9CgogICAgZGF0YSA9IHsKICAgICAgICAnYXV0aF90b2tlbic6IHRva2VuLAogICAgICAgICdlbWFpbCc6IGVtYWlsLAogICAgICAgICdwYXNzd29yZCc6ICdQMWNrbDNfUjFjaycsCiAgICB9CiAgICBjb29raWVzID0gewoKICAgICAgICAnYXV0aF90b2tlbic6IHRva2VuCgogICAgfQoKICAgIHRyeToKICAgICAgICByZXNwb25zZSA9IHNlc3Npb24ucG9zdCgKICAgICAgICAnaHR0cHM6Ly9hcGkub2R5c2VlLmNvbS91c2VyL3NpZ251cCcsIGNvb2tpZXM9Y29va2llcyx2ZXJpZnk9RmFsc2UsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1kYXRhLHByb3hpZXM9ewogICAgICAgICAgICAiaHR0cCI6ICJodHRwOi8vaHdpbXVqdHJqbjY0cGtrOjN0WmdqSXpNOTBKRm16YktAcmVzaWRlbnRpYWwucHJveHlzY3JhcGUuY29tOjgwODAiLAogICAgICAgICAgICAiaHR0cHMiOiAiaHR0cDovL2h3aW11anRyam42NHBrazozdFpnakl6TTkwSkZtemJLQHJlc2lkZW50aWFsLnByb3h5c2NyYXBlLmNvbTo4MDgwIgogICAgICAgIH0pCgogICAgICAgIGpyZXAgPSByZXNwb25zZS5qc29uKCkKICAgICAgICBpZiBqcmVwWyJzdWNjZXNzIl06CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6ZXhpdCgpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZSkKICAgICAgICAKICAgICAgICBwYXNzCiAgICAKCgpkZWYgY2xhaW1fY29pbihhdXRoX3QpOgogICAgaGVhZGVycyA9IHsKICAgICAgICAnYXV0aG9yaXR5JzogJ2FwaS5vZHlzZWUuY29tJywKICAgICAgICAnYWNjZXB0JzogJyovKicsCiAgICAgICAgJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOScsCiAgICAgICAgJ29yaWdpbic6ICdodHRwczovL29keXNlZS5jb20nLAogICAgICAgICdyZWZlcmVyJzogJ2h0dHBzOi8vb2R5c2VlLmNvbS8nLAogICAgICAgICdzZWMtY2gtdWEnOiAnIkNocm9taXVtIjt2PSIxMDQiLCAiIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMDQiJywKICAgICAgICAnc2VjLWNoLXVhLW1vYmlsZSc6ICc/MCcsCiAgICAgICAgJ3NlYy1jaC11YS1wbGF0Zm9ybSc6ICciTGludXgiJywKICAgICAgICAnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLAogICAgICAgICdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywKICAgICAgICAnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1zaXRlJywKICAgICAgICAndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoWDExOyBMaW51eCB4ODZfNjQpIEFwcGxlV2ViS'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))